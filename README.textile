h1. Ariane Dynamic Breadcrumb Sample App

 A PoC for the "Ariane":https://github.com/simonc/ariane breadcrumb gem, forked and modified to support a session and stack based dynamic breadcrumb list.

h2. Features

* Automatic breadcrumb generation based on controller and action name (needs i18n localization feature)
* Manual crumb override
* Custom crumb levels for 'break-out' tasks
* Return_to link renderer


h2. Installation

See the original usage and installation instructions for the published gem at "Ariane":https://github.com/simonc/ariane

The sample application shown here uses the forked and modified Ariane library, which now includes a session based breadcrumb array that will persist across requests. Crumbs with lower crumb levels will @pop@ crumbs with >= crumb levels from the breadcrumb array.

To experiment with the sample app - clone both the forked ariane and ariane-sample repositories.

bc. git clone git://github.com/58bits/ariane.git
git clone git://github.com/58bits/ariane-sample.git

Run @rake db:migrate@ against ariane-sample

Run @rails s@ to start the sample app.

The sample app references the forked "Ariane":https://github.com/simonc/ariane lib directory via an initializer. The ariane repository and sample app can be placed anywhere, but they must be located at the same directory level e.g. @~/Code/ariane@ and @~/Code/ariane-sample@.

The Rails initiializer:

bc.. #~/Code/ariane-sample/config/initializers/ariane.rb 
$:.push File.expand_path("../../../../ariane/lib", __FILE__)
require 'ariane'

Ariane.configure do |config|
    config.use_session_stack = true
end

p. Ariane is configured in the sample app to use the session stack via @config.use_session_stack = true@ (ideally using the database or memcache session stores).

The @application_controller.rb@ has the following @before_filter@:

bc.. class ApplicationController < ActionController::Base
  protect_from_forgery
  before_filter :auto_set_breadcrumb
end

p. The @CustomersContoller@ shows how a custom crumb level can be set for specific actions.

bc.. class CustomersController < ApplicationController
  prepend_before_filter { |controller| controller.crumb_levels :show => 4, :new => 4, :create => 4, :edit => 4, :update => 4}
...

p. Manual crumb levels and labels can be added in any action via the regular @ariane.add@ method.   

h2. Use Case

Start the ariane-sample app and create a new Widget - then break-out of the New Widget task and create a New Customer. Once the customer has been created, return to the New Widget task.

h2. Issues

* The current implementation depends on a root_path definition in routes.rb
* The current implementation will crash on nil[] error if no crumbs have been set and ariane.render is called in the view.

h2. TODO

Create an @ariane.return_to@ render method to generate a return_to html link that that can be used as a link or button in addition to the breadcrumb trail to return to the previous task.
